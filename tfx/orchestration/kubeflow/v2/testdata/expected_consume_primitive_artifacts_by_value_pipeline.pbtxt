# proto-file: kfp/pipeline_spec/pipeline_spec.proto
# proto-message: PipelineSpec

pipeline_info {
  name: "consume-primitive-artifacts-by-value-pipeline"
}
deployment_spec {
  fields {
    key: "executors"
    value {
      struct_value {
        fields {
          key: "ConsumeByValue_executor"
          value {
            struct_value {
              fields {
                key: "container"
                value {
                  struct_value {
                    fields {
                      key: "command"
                      value {
                        list_value {
                          values {
                            string_value: "consume"
                          }
                          values {
                            string_value: "{{$.inputs.artifacts[\'input_string\'].value}}"
                          }
                          values {
                            string_value: "{{$.inputs.artifacts[\'input_int\'].value}}"
                          }
                          values {
                            string_value: "{{$.inputs.artifacts[\'input_float\'].value}}"
                          }
                          values {
                            string_value: "{{$.inputs.parameters[\'param_string\']}}"
                          }
                          values {
                            string_value: "{{$.inputs.parameters[\'param_int\']}}"
                          }
                          values {
                            string_value: "{{$.inputs.parameters[\'param_float\']}}"
                          }
                        }
                      }
                    }
                    fields {
                      key: "image"
                      value {
                        string_value: "busybox"
                      }
                    }
                  }
                }
              }
            }
          }
        }
        fields {
          key: "ProducePrimitives_executor"
          value {
            struct_value {
              fields {
                key: "container"
                value {
                  struct_value {
                    fields {
                      key: "command"
                      value {
                        list_value {
                          values {
                            string_value: "produce"
                          }
                          values {
                            string_value: "{{$.outputs.artifacts[\'output_string\'].uri}}"
                          }
                          values {
                            string_value: "{{$.outputs.artifacts[\'output_int\'].uri}}"
                          }
                          values {
                            string_value: "{{$.outputs.artifacts[\'output_float\'].uri}}"
                          }
                        }
                      }
                    }
                    fields {
                      key: "image"
                      value {
                        string_value: "busybox"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
components {
  key: "ConsumeByValue"
  value {
    input_definitions {
      artifacts {
        key: "input_float"
        value {
          artifact_type {
            instance_schema: "title: tfx.Float\ntype: object\n"
          }
        }
      }
      artifacts {
        key: "input_int"
        value {
          artifact_type {
            instance_schema: "title: tfx.Integer\ntype: object\n"
          }
        }
      }
      artifacts {
        key: "input_string"
        value {
          artifact_type {
            instance_schema: "title: tfx.String\ntype: object\n"
          }
        }
      }
      parameters {
        key: "param_float"
        value {
          type: DOUBLE
        }
      }
      parameters {
        key: "param_int"
        value {
          type: INT
        }
      }
      parameters {
        key: "param_string"
        value {
          type: STRING
        }
      }
    }
    executor_label: "ConsumeByValue_executor"
  }
}
components {
  key: "ProducePrimitives"
  value {
    output_definitions {
      artifacts {
        key: "output_float"
        value {
          artifact_type {
            instance_schema: "title: tfx.Float\ntype: object\n"
          }
        }
      }
      artifacts {
        key: "output_int"
        value {
          artifact_type {
            instance_schema: "title: tfx.Integer\ntype: object\n"
          }
        }
      }
      artifacts {
        key: "output_string"
        value {
          artifact_type {
            instance_schema: "title: tfx.String\ntype: object\n"
          }
        }
      }
    }
    executor_label: "ProducePrimitives_executor"
  }
}
root {
  dag {
    tasks {
      key: "ConsumeByValue"
      value {
        task_info {
          name: "ConsumeByValue"
        }
        inputs {
          parameters {
            key: "param_float"
            value {
              runtime_value {
                constant_value {
                  double_value: 3.14
                }
              }
            }
          }
          parameters {
            key: "param_int"
            value {
              runtime_value {
                constant_value {
                  int_value: 42
                }
              }
            }
          }
          parameters {
            key: "param_string"
            value {
              runtime_value {
                constant_value {
                  string_value: "string value"
                }
              }
            }
          }
          artifacts {
            key: "input_float"
            value {
              task_output_artifact {
                producer_task: "ProducePrimitives"
                output_artifact_key: "output_float"
              }
            }
          }
          artifacts {
            key: "input_int"
            value {
              task_output_artifact {
                producer_task: "ProducePrimitives"
                output_artifact_key: "output_int"
              }
            }
          }
          artifacts {
            key: "input_string"
            value {
              task_output_artifact {
                producer_task: "ProducePrimitives"
                output_artifact_key: "output_string"
              }
            }
          }
        }
        dependent_tasks: "ProducePrimitives"
        component_ref {
          name: "ConsumeByValue"
        }
      }
    }
    tasks {
      key: "ProducePrimitives"
      value {
        task_info {
          name: "ProducePrimitives"
        }
        component_ref {
          name: "ProducePrimitives"
        }
      }
    }
  }
}
